#!/bin/bash

function useage() {
  echo "\n Install script for ifahad7 dotfiles"
  echo "\n  Includes: vim (default), and neovim (optionl) zsh, and oh-my-zsh"
  echo "\n  Usage:"
  echo "\n   -n configure for neovim instead of vim (must have neovim installed)"
  echo "\n   -d do a dry run of intall (show you what it is gonna do)"
  echo "\n   -z do not make zsh the default shell"
}

function backup() {
  SYMLINK=$1
  BACKUP_SUFFIX="orig"
  echo "---- Oh ... You have $SYMLINK, I'll back it up for you!!"

  # Don't overwrite old backups
  i="0"
  while [ -e "$SYMLINK.$BACKUP_SUFFIX" ]
  do
    i=$[$i+1]
    BACKUP_SUFFIX="orig$i"
  done

  echo "---- Copying symlink $SYMLINK -> $SYMLINK.$BACKUP_SUFFIX"
  if [ "$DRY_RUN" = false ] ; then
    mv $SYMLINK $SYMLINK.$BACKUP_SUFFIX
  fi
}

function link() {
  SRC_SYMLINK=$1
  DST_SYMLINK=$2

  # backup if symlink exists
  if [ -e "$DST_SYMLINK" ]; then
    backup $DST_SYMLINK
  fi

  echo "---- Creating symlink $SRC_SYMLINK -> $DST_SYMLINK"
  if [ "$DRY_RUN" = false ] ; then
    ln -s $SRC_SYMLINK $DST_SYMLINK
  fi
}

function link_vim() {

  if [ "$USE_NEOVIM" = true ] ; then
    echo "---- Using neovim as vim configuration" >&2
    VIM_DIR="$HOME/.config/nvim"
    VIM_COMMAND="nvim"
    VIMRC_DIR=$VIM_DIR
    VIMRC_FILE="init.vim"
  else
    echo "---- Using vim as vim configuration"
    VIM_DIR="$HOME/.vim"
    VIM_COMMAND="vim"
    VIMRC_DIR=$HOME
    VIMRC_FILE=".vimrc"
  fi

  # install plug
  if [ -e "$VIM_DIR/autoload/plug.vim" ]; then
    echo "---- plug.vim vim plugin manager already exists"
  else
    echo "---- Installing plug.vim vim plugin manager"
    if [ "$DRY_RUN" = false ] ; then
      curl -fLo $VIM_DIR/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    fi
  fi

  link $DOTFILES_DIR/vimrc $VIMRC_DIR/$VIMRC_FILE

  # install vim plugins
  if [ "$DRY_RUN" = false ] ; then
    $VIM_COMMAND +PlugInstall +qal
  fi
}

function link_zshrc() {
  echo "---- Linking zshrc"
  link $DOTFILES_DIR/zshrc $HOME/.zshrc
}

function link_ohmyzsh() {
  echo "---- Linking oh-my-zsh"
  # Creating/updating oh-my-zsh git submodule
  git submodule init
  git submodule update

  link $DOTFILES_DIR/oh-my-zsh $HOME/.oh-my-zsh

  if [ -f $DOTFILES_DIR/$OHMYZSH_THEME ]; then
    echo "---- Installing oh-my-zsh $OHMYZSH_THEME theme"
    cp $DOTFILES_DIR/$OHMYZSH_THEME $DOTFILES_DIR/oh-my-zsh/themes/
  fi
}

function link_gitconfig() {
  echo "---- Linking gitconfig"
  link $DOTFILES_DIR/gitconfig $HOME/.gitconfig
}

# reset argument index
OPTIND=0
USE_NEOVIM=false
DRY_RUN=false
USE_ZSH=true
DOTFILES_DIR="$HOME/dotfiles"
OHMYZSH_THEME="ifahad7.zsh-theme"


while getopts ":nbdh" opt; do
  case $opt in
    n)
      USE_NEOVIM=true
      ;;
    b)
      USE_ZSH=false
      ;;
    d)
      DRY_RUN=true
      ;;
    h)
      useage
      exit 1
      ;;
    \?)
      useage
      exit 1
      ;;
  esac
done

if [ "$USE_ZSH" = true ] ; then

  if which zsh >/dev/null; then
    if [[ $SHELL =~ .*/zsh ]] ; then
      echo "---- Cool you already use zsh as defualt"
    else
      echo "---- Making zsh your default shell"
      chsh -s /bin/zsh
    fi
    # Linking zsh dotfiles
    link_ohmyzsh
    link_zshrc
  else
    echo "---- You do not have zsh on your machine :("
  fi

fi

link_gitconfig
link_vim
