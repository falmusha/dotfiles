# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# Index starts from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# Mouse
set -g mouse on

# Mouse scrolling
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Copy-mode
set-window-option -g mode-keys vi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-a
bind-key c-a last-window

# prefix a
bind-key a send-prefix

# prefix |
bind-key | split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Back and forth
bind-key bspace previous-window
bind-key space next-window
bind-key / next-layout # Overridden

# Pane-movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-


# Smart pane switching with awareness of vim and fzf
forward_programs="view|n?vim?|fzf"

should_forward="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?($forward_programs)(diff)?$'"

bind -n C-h if-shell "$should_forward" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$should_forward" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$should_forward" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$should_forward" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$should_forward" "send-keys C-\\" "select-pane -l"

bind -n M-Right resize-pane -R 5
bind -n M-Left resize-pane -L 5
bind -n M-Down resize-pane -D 5
bind -n M-Up resize-pane -U 5

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key y send-keys C-l C-a \; run-shell 'sleep 0.25' \;\
  copy-mode \; send-keys -X begin-selection \;\
  send-keys -X -N 100 'cursor-down' \;\
  send-keys -X 'end-of-line' \;\
  send-keys -X 'previous-word' \;\
  send-keys -X 'next-word-end' \;\
  send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \;\
  send-keys C-e \;\
  display-message "Line copied"

# -------------------------------------------------------------------
# Random
# -------------------------------------------------------------------

# workaround when pressing ESC when running nvim in tmux
set -g escape-time 10

# Fix to us rvm
set -g default-command "$SHELL --login"

# Fix tmux opening apps issues
set-option -g default-command "reattach-to-user-namespace -l zsh"
